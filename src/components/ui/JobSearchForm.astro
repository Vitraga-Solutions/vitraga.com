---
const { currentQuery = '', currentPage = 1 } = Astro.props;
---

<form id="job-search-form" class="mb-8" method="GET">
  <div class="flex flex-col sm:flex-row gap-4 items-center">
    <div class="relative flex-1 w-full">
      <label for="search-input" class="sr-only">Search Jobs</label>
      <input
        type="text"
        id="search"
        name="search"
        value={currentQuery}
        class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-indigo-500 focus:border-indigo-500 block w-full p-3 pl-4"
        placeholder="Search jobs by title..."
      />
      <input type="hidden" name="page" value="1" />
    </div>
    <div class="flex gap-2">
      <button
        type="submit"
        class="px-6 py-3 text-sm font-medium text-white bg-black rounded-lg border hover:bg-gray-800 focus:ring-4 focus:outline-none focus:ring-gray-300 transition-colors"
      >
        <div class="flex items-center gap-2">
          <svg
            class="w-4 h-4"
            aria-hidden="true"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 20 20"
          >
            <path
              stroke="currentColor"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z"
            />
          </svg>
          Search
        </div>
      </button>
      {currentQuery && (
        <a
          href="/careers"
          class="px-6 py-3 text-sm font-medium text-gray-700 bg-gray-100 rounded-lg border hover:bg-gray-200 focus:ring-4 focus:outline-none focus:ring-gray-300 transition-colors"
        >
          Clear
        </a>
      )}
    </div>
  </div>
</form>

<script>
  // Auto-submit on input change with debounce
  const searchForm = document.getElementById('job-search-form') as HTMLFormElement;
  const searchInput = document.getElementById('search') as HTMLInputElement;
  let debounceTimer: ReturnType<typeof setTimeout>;

  if (searchInput && searchForm) {
    searchInput.addEventListener('input', (e) => {
      clearTimeout(debounceTimer);
      debounceTimer = setTimeout(() => {
        // Reset page to 1 when searching
        const pageInput = searchForm.querySelector('input[name="page"]') as HTMLInputElement;
        if (pageInput) pageInput.value = '1';
        searchForm.submit();
      }, 500); // 500ms debounce
    });
  }
</script>
